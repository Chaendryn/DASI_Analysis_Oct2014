is.na(finData2$satjob)
is.na(finData$satjob)
count(is.na(finData$satjob))
length(is.na(finData$satjob == TRUE))
complete.case(finData)
complete.cases(finData)
table(complete.cases(finData))
table(complete.cases(finData$satjob))
table(complete.cases(finData$satfin))
table(complete.cases(finData))
summary(finData)
str(finData)
colnames2 <- c("year", "satfin", "satjob")
gssSub2 <- gss[ , colnames2]
finData <- gssSub2[gssSub2$year == 2000:2012, ]
load(url("http://bit.ly/dasi_gss_data"))
colnames2 <- c("year", "satfin", "satjob")
gssSub2 <- gss[ , colnames2]
finData <- gssSub2[gssSub2$year == 2000:2012, ]
View(finData)
finData <- gssSub2[gssSub2$year == 2000:2012, 2:3]
View(finData)
finFinal <- finData[complete.cases(finData)]
finFinal <- finData[complete.cases(finData), ]
View(finFinal)
nrow(finFinal)
ncol(finFinal)
barplot(table(finFinal$satfin, finFinal$satjob))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE)
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE)
mosaic(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE)
mosaicplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE)
mosaicplot(table(finFinal$satjob, finFinal$satfin))
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = rainbow)
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = heat.colors)
gColor <- heat.colors()
gColor <- heat.colors(100)
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = gColor)
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = gColor + 1)
gColor <- heat.colors(1:100)
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = c(1, 2, 3))
gColor <- heat.colors(c(1,5,7))
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = gColor)
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = heat.colors(3))
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = terrain.colors(3))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = terrain.colors(4))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = topo.colors(4))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = heat.colors(4))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = rainbow(4))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = heat.colors(4))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = topo.colors(4))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, color = topo.colors(4))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = topo.colors(4))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = heat.colors(4))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3))
par(mfrow=c(1,2))
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = topo.colors(4))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3))
install.packages("https://github.com/hadley/productplots")
install.packages("GGally")
library(GGally)
ggally_ratio(finFinal)
dev.off()
par(mfrow=c(1,2))
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3), main = "Job Satisfaction by Financial Situation", xlab = "Financial Situation")
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = topo.colors(4))
dev.off()
mosaicplot(table(finFinal$satjob, finFinal$satfin), color = topo.colors(4), main = "Job Satisfaction by Financial Situation", xlab = "Financial Situation", ylab = "Job Satisfaction", cex.axis = 0.66)
library(xtable)
results <- table(finFinal$satjob, finFinal$satfin)
source('C:/Users/yolandek/Videos/Coursera/Duke Data Science & Stats Inference/DASI_Analysis_Oct2014/style.R')
source('C:/Users/yolandek/Videos/Coursera/Duke Data Science & Stats Inference/DASI_Analysis_Oct2014/style.R')
install.packages("Gmisc")
library(Gmisc)
freqTable <- table(finFinal$satjob, finFinal$satfin)
freqTable
str(freqTable)
library(plyr)
freq2 <- mutate(freqTable, appTotal=apply(freqTable, 1, sum)
)
freq2 <- as.data.frame(freqTable)
View(freq2)
freq2 <- data.frame(freqTable)
View(freq2)
freq2 <- as.data.frame.matrix(freqTable)
freq2
freq2 <- mutate(freq2, appTotal=apply(freq2, 1, sum)
)
View(freq2)
freq2 <- mutate(freq2, colTotal=apply(freq2, 2, sum)
)
View(freq2)
colTotal <- apply(freq2, 2, sum)
colTotal
freq3 <- rbind(freq2, colTotal)
View(freq3)
row.names(freq3[5]) <- "Column Total"
row.names(freq3[[5]]) <- "Column Total"
row.names(freq3[5]) <- "Column Total"
row.names(freq3)
row.names(freq3[5])
row.names(freq3[[5]])
row.names(freq3[5])
rowNames <- row.names(freq3)
rowNames[5] <- "ColTotal"
rowNames
rowNames[5] <- "Column Total"
row.names(freq3) <- rowNames
View(freq3)
freqTable <- table(finFinal$satjob, finFinal$satfin)
freq2 <- as.data.frame.matrix(freqTable)
colTotal <- apply(freq2, 2, sum)
freq2 <- rbind(freq2, colTotal)
rowNames <- row.names(freq2)
rowNames[5] <- "Column Total"
row.names(freq2) <- rowNames
freq2 <- mutate(freq2, rowTotal=apply(freq2, 1, sum)
)
View(freq2)
freqTable <- table(finFinal$satjob, finFinal$satfin)
freq2 <- as.data.frame.matrix(freqTable)
colTotal <- apply(freq2, 2, sum)
freq2 <- rbind(freq2, colTotal)
rowNames <- row.names(freq2)
rowNames[5] <- "columnTotal"
row.names(freq2) <- rowNames
freq2 <- mutate(freq2, rowTotal=apply(freq2, 1, sum))
View(freq2)
levels(finFinal$satfin)
inference(finFinal$satjob, finFinal$satfin, est = "proportion", type = "ht", method = "theoretical", alternative = "twosided")
inference(finFinal$satjob, finFinal$satfin, est = "proportion", type = "ht", method = "theoretical", alternative = "greater")
inference(finFinal$satjob, finFinal$satfin, est = "proportion", type = "ht", method = "theoretical", alternative = "greater", eda_plot = FALSE, inf_lines = TRUE)
infTest <- inference(finFinal$satjob, finFinal$satfin, est = "proportion", type = "ht", method = "theoretical", alternative = "greater", eda_plot = FALSE, inf_lines = TRUE)
str(infTest)
infTes
infTest
rm(infTest)
rm(gColor)
rm(colTotal)
rm(freq3)
rm(colnames)
rm(colnames2)
rowVS <- freq2[1,5]
rowMS <- freq2[2,5]
rowLD <- freq2[3,5]
rowVD <- freq2[4,5]
colS <- freq2[5,1]
colML <- freq2[5,2]
colNS <- freq2[5,3]
tableTotal <- freq2[5,4]
freq2[1,5]
str(freq2)
rowVS <- freq2[1,4]
rowMS <- freq2[2,4]
rowLD <- freq2[3,4]
rowVD <- freq2[4,4]
colS <- freq2[5,1]
colML <- freq2[5,2]
colNS <- freq2[5,3]
tableTotal <- freq2[5,4]
rowTotals <- freq2[1:4, 4]
rowTot <- transform(rowTotals)
rowTot
View(rowTot)
t(rowNames)
t(rowTotals)
colTotals <- freq2[5,]
View(colTotals)
View(rowTot)
rowTotals <- t(rowTotals)
View(rowTotals)
View(colTotals)
View(rowTotals)
colTotals <- freq2[5,1:3]
View(colTotals)
rowTotals <- freq2[1:4, 4]
View(rowTot)
rowTotals <- data.frame(freq2[1:4, 4])
View(rowTotals)
rm(rowLD)
rm(rowMS)
rm(rowVD)
rm(rowVS)
rm(colML)
rm(colNS)
rm(colS)
rm(rowTot)
View(rowTotals)
View(rowTotals)
for i = 1:3 {
print(colTotal[i])
}
for i in 1:3 {
colTotal[i]
}
for i in 1:3 {
colTotals[i]
}
i <- 1
for i in 1:3 {print(colTotals[i])}
for (i in 1:3) {print(colTotals[i])}
for (i in 1:4) {print(colTotals[i])}
j <- 1
for (i in 1:3) {
print(rowTotals[i])
}
for (i in 1:3) {
print(rowTotals[i,1])
}
for (i in 1:3) {
print(rowTotals[i,1])
}
for (i in 1:3) {
j <- 1
print(rowTotals[j,1])
}
for (i in 1:3) {
j <- 1
print(rowTotals[j,1])
j++
}
for (i in 1:3) {
j <- 1
print(rowTotals[j,1])
j+1
}
for (i in 1:3) {
print(colTotals[i])
for (j in 1:4) {
print(colTotals[1,i]*rowTotals[j,1])
}
j <- j + 1
}
for (i in 1:3) {
print(colTotals[i])
for (j in 1:4) {
print(colTotals[1,i]*rowTotals[j,1]/tableTotal)
}
j <- j + 1
}
for (i in 1:3) {
print(colTotals[i])
for (j in 1:4) {
print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
freq3 <- data.table(4,3)
freq3 <- matrix(4,3)
View(freq3)
freq3 <- matrix(data = NA nrow = 4, ncol = 3)
freq3 <- matrix(data = NA, nrow = 4, ncol = 3)
View(freq3)
for (i in 1:3) {
for (j in 1:4) {
freq3 <- freq3[i,j]
print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
freq3[i,j] <- round(colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
freq3[i,j] <- print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
freq3[j,i] <- print(round((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
freq3 <- matrix(data = NA, nrow = 4, ncol = 3)
for (i in 1:3) {
for (j in 1:4) {
freq3[j,i] <- ((colTotals[1,i]*rowTotals[j,1])/tableTotal)
}
j <- j + 1
}
View(freq3)
for (i in 1:3) {
for (j in 1:4) {
freq3[j,i] <- trunc(((colTotals[1,i]*rowTotals[j,1])/tableTotal))
}
j <- j + 1
}
View(freq3)
for (i in 1:3) {
for (j in 1:4) {
freq3[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
View(freq3)
rowNames
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=rowNames[1:4])
colNames
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=rowNames)
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=row.names(freq2))
View(freq2)
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=row.names(freq2[1:4]))
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=row.names(freq2[c(1,2,3,4)]))
eNames <- rowNames[1:4]
enames
eNames
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3, row.names=eNames)
str(eNames)
eCounts <- data.frame(data = NA, nrow = 4, ncol = 3)
View(eCounts)
eCounts <- data.frame(matrix(data = NA, nrow = 4, ncol = 3), row.names=eNames)
View(eCounts)
eColTotal <- apply(eCounts, 2, sum)
View(eCounts)
for (i in 1:3) {
for (j in 1:4) {
freq3[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
for (i in 1:3) {
for (j in 1:4) {
eCounts[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
View(eCounts)
eColTotal <- apply(eCounts, 2, sum)
eCounts <- rbind(eCounts, eColTotal)
View(eCounts)
eRowNames <- row.names(eCounts)
eRowNames[5] <- "columnTotal"
row.names(eCounts) <- eRowNames
eCounts <- mutate(eCounts, rowTotal=apply(eCounts, 1, sum))
View(eCounts)
eColNames <- names(finData)
eColNames
eColNames <- names(freq2)
eColNames
colnames(eCounts) <- eColNames
View(eCounts)
load(url("http://bit.ly/dasi_gss_data"))
colnames2 <- c("year", "satfin", "satjob")
gssSub2 <- gss[ , colnames2]
finData <- gssSub2[gssSub2$year == 2000:2012, 2:3]
summary(finData)
finFinal <- finData[complete.cases(finData), ]
summary(finFinal)
barplot(table(finFinal$satfin, finFinal$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3), main = "Job Satisfaction by Financial Situation", xlab = "Financial Situation", ylab = "Job Satisfaction (# of observations)", cex.axis = 0.66)
mosaicplot(table(finFinal$satfin, finFinal$satjob), color = topo.colors(4), main = "", xlab = "Job Satisfaction", ylab = "Satisfaction - Financial Situation", cex.axis = 0.66)
library(Gmisc)
library(plyr)
## Building the data table with row & column totals
freqTable <- table(finFinal$satjob, finFinal$satfin)
freq2 <- as.data.frame.matrix(freqTable)
colTotal <- apply(freq2, 2, sum)
freq2 <- rbind(freq2, colTotal)
rowNames <- row.names(freq2)
rowNames[5] <- "columnTotal"
row.names(freq2) <- rowNames
freq2 <- mutate(freq2, rowTotal=apply(freq2, 1, sum))
htmlTable(freq2, align = "c|c|c|c", caption = "Table - Frequency of scenarios from sample data : Job Satisfaction (Columns) by Financial Satisfaction (Rows)")
tableTotal <- freq2[5,4]
colTotals <- freq2[5,1:3]
rowTotals <- data.frame(freq2[1:4, 4])
## Initalise an empty matrix for the expected values
eNames <- rowNames[1:4]
eCounts <- data.frame(matrix(data = NA, nrow = 4, ncol = 3), row.names=eNames)
## Calculate the expected values and write to matrix
for (i in 1:3) {
for (j in 1:4) {
eCounts[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
eColTotal <- apply(eCounts, 2, sum)
eRowNames <- row.names(eCounts)
eRowNames[5] <- "columnTotal"
row.names(eCounts) <- eRowNames
eCounts <- mutate(eCounts, rowTotal=apply(eCounts, 1, sum))
eColNames <- names(freq2)
colnames(eCounts) <- eColNames
htmlTable(eCounts, align = "c|c|c|c", caption = "Table - Expected Counts of scenarios from sample data : Job Satisfaction (Columns) by Financial Satisfaction (Rows)")
View(eCounts)
tableTotal <- freq2[5,4]
colTotals <- freq2[5,1:3]
rowTotals <- data.frame(freq2[1:4, 4])
## Initalise an empty matrix for the expected values
eNames <- rowNames[1:4]
eCounts <- data.frame(matrix(data = NA, nrow = 4, ncol = 3), row.names=eNames)
## Calculate the expected values and write to matrix
for (i in 1:3) {
for (j in 1:4) {
eCounts[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
eColTotal <- apply(eCounts, 2, sum)
row.names(eCounts) <- eRowNames
eCounts <- mutate(eCounts, rowTotal=apply(eCounts, 1, sum))
eRowNames <- row.names(eCounts)
eRowNames[5] <- "columnTotal"
eColNames <- names(freq2)
colnames(eCounts) <- eColNames
htmlTable(eCounts, align = "c|c|c|c", caption = "Table - Expected Counts of scenarios from sample data : Job Satisfaction (Columns) by Financial Satisfaction (Rows)")
row.names(eCounts)
tableTotal <- freq2[5,4]
colTotals <- freq2[5,1:3]
rowTotals <- data.frame(freq2[1:4, 4])
## Initalise an empty matrix for the expected values
eNames <- rowNames[1:4]
eCounts <- data.frame(matrix(data = NA, nrow = 4, ncol = 3), row.names=eNames)
## Calculate the expected values and write to matrix
for (i in 1:3) {
for (j in 1:4) {
eCounts[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
eColTotal <- apply(eCounts, 2, sum)
eCounts <- rbind(eCounts, eColTotal)
row.names(eCounts) <- eRowNames
eCounts <- mutate(eCounts, rowTotal=apply(eCounts, 1, sum))
eRowNames <- row.names(eCounts)
eRowNames[5] <- "columnTotal"
eColNames <- names(freq2)
colnames(eCounts) <- eColNames
htmlTable(eCounts, align = "c|c|c|c", caption = "Table - Expected Counts of scenarios from sample data : Job Satisfaction (Columns) by Financial Satisfaction (Rows)")
View(gssSub2)
View(eCounts)
eNames <- rowNames[1:4]
eCounts <- data.frame(matrix(data = NA, nrow = 4, ncol = 3), row.names=eNames)
View(eCounts)
for (i in 1:3) {
for (j in 1:4) {
eCounts[j,i] <- round(((colTotals[1,i]*rowTotals[j,1])/tableTotal), digits = 0)
}
j <- j + 1
}
View(eCounts)
eColTotal <- apply(eCounts, 2, sum)
View(eCounts)
eCounts <- rbind(eCounts, eColTotal)
View(eCounts)
eCounts <- mutate(eCounts, rowTotal=apply(eCounts, 1, sum))
View(eCounts)
eRowNames <- row.names(eCounts)
eRowNames
eRowNames[5] <- "columnTotal"
eRowNames
colnames(eCounts) <- eColNames
View(eCounts)
row.names(eCounts) <- eRowNames
View(eCounts)
boxplot(finFinal$satfin)
dotplot(finFinal$satfin)
library(lattice)
dotchart(finFinal$satfin)
dotchart(as.numeric(finFinal$satfin))
boxplot(as.numeric(finFinal$satfin))
jSit <- aggregate(satjob, data = finFinal)
View(finFinal)
jSit <- aggregate(finFinal$satjob, data = finFinal)
jSit <- aggregate(finFinal$satjob, sum, data = finFinal)
jSit <- aggregate(finFinal$satjob, FUN = sum, data = finFinal)
jSit <- aggregate(finFinal$satjob, by = "Very Satisfied", FUN = sum, data = finFinal)
listy <- levels(finFinal$satjob)
listy <- as.list(levels(finFinal$satjob))
jSit <- aggregate(finFinal$satjob, by = listy, FUN = sum, data = finFinal)
jSit <- aggregate(finFinal$satjob, by = listy[1], FUN = sum, data = finFinal)
jSit <- aggregate(satjob, by = listy[1], FUN = sum, data = finFinal)
names(finFinal)
jSit <- aggregate(finFinal$satjob, by = listy[1], FUN = sum)
listy <- as.list(finFinal$satjob)
jSit <- aggregate(finFinal$satjob, by = listy[1], FUN = sum)
tableTotal <- nrow(finFinal)
jSuc <- 387 + 330
jFin <- 216 + 377
names(gssSub2)
names(gss)
finPlot <- finFinal
levels(finPlot$satfin)
levels(finPlot$satjob)
levels(finPlot$satfin) <- c("Sat (Fin)", "MoreLess (Fin)", "NotSat (Fin)")
levels(finPlot$satfin)
levels(finPlot$satjob) <- c("VSat (Job)", "MSat (Job)", "LDis (Job)", "VDis (Job")
dev.off()
barplot(table(finPlot$satfin, finPlot$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3), main = "Job Satisfaction by Financial Situation", xlab = "Financial Situation", ylab = "Job Satisfaction (# of observations)", cex.axis = 0.66)
levels(finPlot$satjob) <- c("VSat (Job)", "MSat (Job)", "LDis (Job)", "VDis (Job)")
barplot(table(finPlot$satfin, finPlot$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3), main = "Job Satisfaction by Financial Situation", xlab = "Financial Situation", ylab = "Job Satisfaction (# of observations)", cex.axis = 0.66)
mosaicplot(table(finPlot$satfin, finPlot$satjob), color = topo.colors(4), main = "", xlab = "Job Satisfaction", ylab = "Satisfaction - Financial Situation", cex.axis = 0.66)
?par
barplot(table(finPlot$satfin, finPlot$satjob), legend=TRUE, beside = TRUE, col = heat.colors(3), main = "Financial Situation by Job Satisfaction", xlab = "Job Satisfaction", ylab = "Financial Satisfaction (# of observations)", cex.axis = 0.66)
mosaicplot(table(finPlot$satfin, finPlot$satjob), color = topo.colors(4), main = "Financial Satisfaction vs Job Satisfaction", sub = "Job Satisfaction", ylab = "Satisfaction - Financial Situation")
mosaicplot(table(finPlot$satfin, finPlot$satjob), color = topo.colors(4), main = "Financial Satisfaction vs Job Satisfaction", sub = "Job Satisfaction", ylab = "Satisfaction - Financial Situation", las = 1)
